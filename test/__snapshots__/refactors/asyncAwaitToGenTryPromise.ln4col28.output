// Result of running refactor asyncAwaitToGenTryPromise at position 4:28
import * as Effect from "effect/Effect"

export function refactorMe(arg: string) {
    return Effect.gen(function*() {
        for (let i = 0; i < 10; i++) {
            yield* Effect.tryPromise({ try: () => Promise.resolve(i), catch: error => ({ _tag: "Error1" as const, error }) })
        }
        return yield* Effect.tryPromise({ try: () => Promise.resolve(arg), catch: error => ({ _tag: "Error2" as const, error }) })
    })
}
