// Result of running refactor asyncAwaitToGenTryPromise at position 13:41
import * as Effect from "effect/Effect"

const asyncFunctionDeclaration = async function() {
  const response = await fetch("test")
  if (response.ok) {
    const y = await response.json()
    return y
  }
  return null
}

const asyncArrowFunctionExpression = () => Effect.gen(function*() {
    const response = yield* Effect.tryPromise({ try: () => fetch("test"), catch: error => ({ _tag: "Error1" as const, error }) })
    if (response.ok) {
        const y = yield* Effect.tryPromise({ try: () => response.json(), catch: error => ({ _tag: "Error2" as const, error }) })
        return y
    }
    return null
})
