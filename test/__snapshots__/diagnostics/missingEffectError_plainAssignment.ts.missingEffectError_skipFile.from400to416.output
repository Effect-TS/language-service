// code fix missingEffectError_skipFile  output for range 400 - 416
/** @effect-diagnostics missingEffectError:skip-file */
import * as Data from "effect/Data"
import * as Effect from "effect/Effect"

class ErrorA extends Data.Error<{
  a: 1
}> {}

class ErrorB extends Data.Error<{
  a: 2
}> {}

class ErrorC extends Data.Error<{
  a: 3
}> {}

declare const effectWithErrors: Effect.Effect<number, ErrorA | ErrorB | ErrorC>

export const noError: Effect.Effect<number> = Effect.succeed(1)

// @ts-expect-error
export const missingAllErrors: Effect.Effect<number> = effectWithErrors

// @ts-expect-error
export const missingErrorC: Effect.Effect<number, ErrorA | ErrorB> = effectWithErrors

export interface EffectSubtyping<A> extends Effect.Effect<A, ErrorA | ErrorB> {}

// @ts-expect-error
export const missingErrorCWithSubtyping: EffectSubtyping<number> = effectWithErrors

export function missingErrorWithGenericType<A>(error: A) {
  // @ts-expect-error
  const missingErrorA: Effect.Effect<never> = Effect.fail(error)
  return missingErrorA
}

// @ts-expect-error
const _ = effectWithErrors satisfies Effect.Effect<number, never, never>
