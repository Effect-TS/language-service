// code fix scopeInLayerEffect_scoped  output for range 940 - 1082
import * as Context from "effect/Context"
import * as Effect from "effect/Effect"
import * as Layer from "effect/Layer"

class MyService extends Context.Tag("MyService")<MyService, {
  a: number
}>() {}

class OtherService extends Context.Tag("OtherService")<OtherService, {
  b: number
}>() {}

export class MyService2 extends Effect.Service<MyService2>()("MyService2", {
  effect: Effect.gen(function*() {
    yield* Effect.addFinalizer(() => Effect.log("finalizer"))
    return { a: 1 }
  })
}) {}

export class MyService3 extends Effect.Service<MyService2>()("MyService2", {
  effect: Effect.gen(function*() {
    const _ = yield* OtherService
    yield* Effect.addFinalizer(() => Effect.log("finalizer"))
    return { a: 1 }
  })
}) {}

export const shouldNotReport = Layer.scoped(
  MyService,
  Effect.gen(function*() {
    yield* Effect.addFinalizer(() => Effect.log("finalizer"))
    return { a: 1 }
  })
)

export const myLayer = Layer.scoped(
  MyService,
  Effect.gen(function*() {
    yield* Effect.addFinalizer(() => Effect.log("finalizer"))
    return { a: 1 }
  })
)

export const myLayer2 = Layer.effect(
  MyService,
  Effect.gen(function*() {
    const _otherService = yield* OtherService
    yield* Effect.addFinalizer(() => Effect.log("finalizer"))
    return { a: 1 }
  })
)
